library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity entityName is

port( 
	x,clk: in std_logic ;
	y: out std_logic  
);

end;

architecture archName of entityName is
begin

  type estados is (a0,a1,a2,a3);       -- s0 s1 s2 s3
  signal actuSt, nextSt: estados;      -- actualState & nextState

  processWhat: process (actuSt,x) begin

    case actuSt is 

	when a0 => 
	  if x = '0' then 
	    nextSt <= a3; 
	  else 
	    nextSt <= a1;
	  end if;

	when a1 => 
	  if x = '0' then
	    nextSt <= a3;
	  else 
	    nextSt <= a2;
	  end if;
	
	when a2 =>
	  if x = '0' then
	    nextSt <= a3;
	  else
	    nextSt <= a1;
	  end if;

	when a3 =>
	  if x = '0' then
	    nextSt <= a3;
 	  else
	    nextSt <= a0; 
	  end if;
    end case;

  end process processWhat;


  processWhen: process (clk, actuSt, nextSt) begin
    if (clk'event and clk = '1')then
       actuSt <= nextSt;
       if(actuSt = d and nextSt = a)then
	 y = '1';
       else
     	 y = '0';
       end if;
    end if;
  end process processWhat;
	
end archName;


-- not acurrent statement
